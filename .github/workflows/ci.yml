name: CI Pipeline

# Dispara o workflow em pushes para a branch 'main'
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job para validar o backend
  build-backend:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura o ambiente Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      # 3. Baixa as dependências
      - name: Install dependencies
        run: cd backend && go mod tidy
      
      # 4. Tenta compilar o projeto
      - name: Build
        run: cd backend && go build -v ./...

      # 5. Roda os testes (ainda não temos, mas é uma boa prática já deixar o passo)
      - name: Test
        run: cd backend && go test -v ./...

  # Job para validar o frontend
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # 3. Instala as dependências
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      # 4. Tenta compilar o projeto
      - name: Build
        working-directory: ./frontend
        run: npm run build

      # 5. Roda os testes (placeholder)
      # - name: Test
      #   working-directory: ./frontend
      #   run: npm run test